const SETTINGS = {
  APP_NAME: "‡∏Å‡∏é‡∏£‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ö‡∏î‡πâ‡∏≤‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡πÅ‡∏•‡∏∞‡∏™‡∏¥‡πà‡∏á‡πÅ‡∏ß‡∏î‡∏•‡πâ‡∏≠‡∏°",
  SHEET_NAME: {
    RESPONSES: "Responses"
  },
  HEADERS: [
    { key: "timestamp", value: "Timestamp" },
    { key: "Time", value: "Time" },
    { key: "name", value: "Name" },
    { key: "Car registration", value: "Car registration" },
    { key: "phone", value: "Phone" },
    { key: "gender", value: "Gender" },
    { key: "contact about", value: "Contact about" },
    { key: "date", value: "Date" },
    { key: "signature", value: "Signature" }
  ]
};

function link(filename) {
  return HtmlService.createTemplateFromFile(filename).evaluate().getContent();
}

function doGet() {
  return HtmlService.createTemplateFromFile("index.html")
    .evaluate()
    .setTitle(SETTINGS.APP_NAME)
    .setXFrameOptionsMode(HtmlService.XFrameOptionsMode.ALLOWALL);
}

function submit(params) {
  const data = JSON.parse(params);
  const sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName("Responses");
  if (!sheet) sheet = SpreadsheetApp.getActiveSpreadsheet().insertSheet("Responses");

  const now = new Date();
  const rowData = [
    Utilities.formatDate(now, "Asia/Bangkok", "dd/MM/yyyy"), // Timestamp
    Utilities.formatDate(now, "Asia/Bangkok", "HH:mm:ss"),    // Time
    data.name || "",
    data.email || "",
    data.phone || "",
    data.gender || "",
    data.city || "",
    data.date || "",
    "" // Placeholder for signature image
  ];

  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏á‡πÉ‡∏ô Spreadsheet
  sheet.appendRow(rowData);
  const lastRow = sheet.getLastRow();

  // üîπ ‡πÅ‡∏õ‡∏•‡∏á‡∏•‡∏≤‡∏¢‡πÄ‡∏ã‡πá‡∏ô‡∏à‡∏≤‡∏Å Base64 ‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÅ‡∏•‡∏∞‡πÅ‡∏ó‡∏£‡∏Å‡∏•‡∏á‡πÉ‡∏ô Google Sheets
  if (data.signature && data.signature.startsWith("data:image")) {
    try {
      const base64Data = data.signature.split(",")[1]; // ‡∏ï‡∏±‡∏î data:image/png;base64, ‡∏≠‡∏≠‡∏Å
      const blob = Utilities.newBlob(Utilities.base64Decode(base64Data), "image/png", "signature.png");
      
      // üîπ ‡πÅ‡∏ó‡∏£‡∏Å‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏•‡∏á‡πÉ‡∏ô‡πÄ‡∏ã‡∏•‡∏•‡πå Signature
      sheet.insertImage(blob, sheet.getRange(`I${lastRow}`).getColumn(), lastRow);
    } catch (error) {
      Logger.log("Error inserting signature image: " + error.message);
    }
  }

  return JSON.stringify({ message: "‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!" });
}
